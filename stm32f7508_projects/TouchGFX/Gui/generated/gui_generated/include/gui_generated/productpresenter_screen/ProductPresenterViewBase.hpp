/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef PRODUCTPRESENTER_VIEW_BASE_HPP
#define PRODUCTPRESENTER_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/productpresenter_screen/ProductPresenterPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/widgets/TextArea.hpp>

#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/Container.hpp>
#include <gui/containers/mcuLoadWidget.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
class ProductPresenterViewBase : public touchgfx::View<ProductPresenterPresenter>
{
public:
    ProductPresenterViewBase();
    virtual ~ProductPresenterViewBase() {}

    virtual void setupScreen();

    /*
     * Custom Action Handlers
     */
    virtual void nextbuttonPressed()
    {
        // Override and implement this function in ProductPresenterView
    }

    virtual void activateLanguageSelectorButtonClicked()
    {
        // Override and implement this function in ProductPresenterView
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image navigationBar;
    touchgfx::Box textBackground;
    touchgfx::Box shadowBox;
    touchgfx::ScrollableContainer textAreaContainer;
    touchgfx::FadeAnimator< touchgfx::TextArea > bodyText;

    touchgfx::Button nextButton;
    touchgfx::MoveAnimator< touchgfx::TextArea > headlineText;
    touchgfx::MoveAnimator< touchgfx::TextArea > headlineTextSwap;
    touchgfx::Container posterContainer;
    touchgfx::MoveAnimator< touchgfx::Image > poster;
    touchgfx::MoveAnimator< touchgfx::Image > posterSwap;

    touchgfx::Button gotoMenuButton;
    touchgfx::Button activateLanguageSelectorButton;
    McuLoadWidget mcuLoad;

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ProductPresenterViewBase, const touchgfx::AbstractButton&> buttonCallback;

};

#endif // PRODUCTPRESENTER_VIEW_BASE_HPP
